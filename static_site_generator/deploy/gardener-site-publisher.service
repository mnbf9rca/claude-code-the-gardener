[Unit]
Description=Claude the Gardener - Static Site Publisher
Documentation=https://github.com/mnbf9rca/claude-code-the-gardener
After=network-online.target
Wants=network-online.target

[Service]
Type=oneshot
User=gardener-publisher
Group=gardener-publisher
WorkingDirectory=/home/gardener-publisher/app

# Set PATH to include uv installation
Environment="PATH=/home/gardener-publisher/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# Load environment variables (AWS credentials, S3 bucket name)
EnvironmentFile=/home/gardener-publisher/app/.env.publish

# Ping healthchecks.io when starting (optional - only if HEALTHCHECK_URL is set)
# The - prefix means failure is ignored
ExecStartPre=-/bin/bash -c 'if [ -n "$HEALTHCHECK_URL" ]; then curl -fsS -m 10 --retry 5 "$HEALTHCHECK_URL/start"; fi'

# Run the orchestration script
# Skip sync because we're running on the Pi (data is local)
# Note: AWS credentials and S3 bucket are passed via environment variables from .env.publish
ExecStart=/bin/bash /home/gardener-publisher/app/orchestrate.sh \
    --skip-sync \
    --data-dir /home/mcpserver/data \
    --conversations-dir /home/gardener/.claude/projects/-home-gardener-workspace \
    --photos-dir /home/mcpserver/photos \
    --output-dir /home/gardener-publisher/app/output

# Ping healthchecks.io with exit status (optional - only if HEALTHCHECK_URL is set)
ExecStopPost=/bin/bash -c 'if [ -n "$HEALTHCHECK_URL" ]; then curl -fsS -m 10 --retry 5 "$HEALTHCHECK_URL/$EXIT_STATUS"; fi'

# Logging
StandardOutput=journal
StandardError=journal
SyslogIdentifier=gardener-publisher

# Resource limits (prevent runaway processes)
MemoryMax=512M
CPUQuota=50%

# Security hardening
PrivateTmp=true
NoNewPrivileges=true
ProtectSystem=strict
ProtectHome=read-only
ReadWritePaths=/home/gardener-publisher/app/output /home/gardener-publisher/.cache

# Restart policy
# Don't restart on failure - let the timer handle scheduling
Restart=no

[Install]
WantedBy=multi-user.target
